#local environment: set environment value: spring.profiles.active=dev to make this file available


apollo.bootstrap.enabled=false

#spring.cloud.consul.discovery.ip-address=192.144.239.226
#spring.cloud.consul.discovery.prefer-ip-address=true
#spring.cloud.consul.discovery.tags=dev
#spring.cloud.consul.discovery.metadata.xxx=xxx

spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto=update

logging.level.com.ctrip=error
logging.level.org.apache.http.wire=warn
logging.level.org.apache.http.headers=warn
logging.level.reactor.netty.channel=warn

logging.level.com.jwy.medusa.mvc.MyAccessLogFilter=debug
logging.level.com.jwy.medusa.saas.MySaasFilter=debug
logging.level.com.jwy.arcwarden=debug
logging.level.com.jwy.api.gateway=debug

# temporarily put the configuration here, and then put it in apollo
spring.cloud.consul.discovery.query-passing = true
spring.cloud.loadbalancer.cache.ttl = 10s

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

spring.cloud.gateway.httpclient.pool.type=FIXED
spring.cloud.gateway.httpclient.pool.max-idle-time=300000
spring.cloud.gateway.httpclient.pool.max-connections=200
spring.cloud.gateway.httpclient.pool.acquire-timeout=5000
spring.cloud.gateway.httpclient.connect-timeout=1000
spring.cloud.gateway.httpclient.response-timeout=20s

spring.cloud.gateway.globalcors.cors-configurations.[/**].allowCredentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOriginPatterns=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=*
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true

